Number of GPUs:  1
All parameters:
>>> cutoff_1: 7.700000e+00
>>> cutoff_2: 8.000000e+00
>>> cutoff_3: 0.000000e+00
>>> cutoff_max: 8.000000e+00
>>> N_types_all_frame:  1
>>> type_index_all_frame: [79]
>>> N_Atoms_max:  3
>>> SEL_A_max: 300
>>> Nframes_tot:  2
>>> sym_coord_type:  1
>>> N_sym_coord: 1200
>>> batch_size: 32
>>> stop_epoch: 1000
>>> num_filter_layer:  3
>>> filter_neuron: [16, 32, 128]
>>> axis_neuron:  4
>>> num_fitting_layer:  5
>>> fitting_neuron: [256, 192, 128, 64, 32]
>>> start_lr: 4.000000e-04
>>> (Not used)decay_steps: -1
>>> decay_epoch: 10000
>>> decay_rate: 9.500000e-01
>>> start_pref_e: 1.000000e+00
>>> limit_pref_e: 1.000000e+00
>>> start_pref_f: 1.000000e+03
>>> limit_pref_f: 1.000000e+00
>>> check_step: 5000
>>> output_epoch: 1000
>>> save_epoch: 7000

one_batch_net(
  (batch_norm): BatchNorm1d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (filter_input): ModuleList(
    (0): ModuleList(
      (0): Linear(in_features=1, out_features=16, bias=True)
    )
  )
  (filter_hidden): ModuleList(
    (0): ModuleList(
      (0): ModuleList(
        (0): Linear(in_features=16, out_features=32, bias=True)
        (1): Linear(in_features=32, out_features=128, bias=True)
      )
    )
  )
  (fitting_input): ModuleList(
    (0): Linear(in_features=512, out_features=256, bias=True)
  )
  (fitting_hidden): ModuleList(
    (0): ModuleList(
      (0): Linear(in_features=256, out_features=192, bias=True)
      (1): Linear(in_features=192, out_features=128, bias=True)
      (2): Linear(in_features=128, out_features=64, bias=True)
      (3): Linear(in_features=64, out_features=32, bias=True)
    )
  )
  (fitting_out): ModuleList(
    (0): Linear(in_features=32, out_features=1, bias=True)
  )
)
Number of parameters in the net: 220551
LR update: lr = 0.000380
Force check:
 tensor([[-1.4040144047e-10, -2.3957644202e-10,  3.3609737216e-10,
         -7.3685592350e-11,  1.1662962263e-10, -3.9772846128e-10,
          2.0264138978e-10,  1.0306072662e-10,  5.8989681195e-11],
        [-7.1278477912e-12, -7.0209064257e-12, -8.3836132481e-12,
         -2.2121182924e-12,  1.3657694767e-11, -6.0503633353e-12,
          8.4300726122e-12, -1.0357587184e-12,  1.3607943765e-11]],
       device='cuda:0')
Additional parameters check:
 std:
 tensor([[[0.0972564518, 0.0686524957, 0.0686524957, 0.0686524957]]],
       device='cuda:0') 
avg:
 tensor([[[0.0684154928, 0.0000000000, 0.0000000000, 0.0000000000]]],
       device='cuda:0') 
use_std_avg True
Epoch: 0         , Batch: 0         , lossE:   0.184113 eV/atom, lossF:   0.000000 eV/A, time:      0.021 s
Epoch: 999       , Batch: 0         , lossE:   0.000086 eV/atom, lossF:   0.000000 eV/A, time:      9.665 s
Rank 0: Model saved to ./freeze_model.pytorch

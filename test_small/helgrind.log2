==5643== Helgrind, a thread error detector
==5643== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==5643== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==5643== Command: ../c/a.out
==5643== Parent PID: 5012
==5643== 
==5643== ---Thread-Announcement------------------------------------------
==5643== 
==5643== Thread #1 is the program's root thread
==5643== 
==5643== ---Thread-Announcement------------------------------------------
==5643== 
==5643== Thread #2 was created
==5643==    at 0x5A3D3DE: clone (clone.S:74)
==5643==    by 0x571F149: create_thread (createthread.c:102)
==5643==    by 0x5720E83: pthread_create@@GLIBC_2.2.5 (pthread_create.c:679)
==5643==    by 0x4C34653: pthread_create_WRK (hg_intercepts.c:427)
==5643==    by 0x4C35737: pthread_create@* (hg_intercepts.c:460)
==5643==    by 0x520E3AD: __kmp_create_worker (z_Linux_util.cpp:879)
==5643==    by 0x51D9865: __kmp_allocate_thread (kmp_runtime.cpp:4545)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x54D5200 by thread #1
==5643== Locks held: none
==5643==    at 0x51D97D6: __kmp_allocate_thread (kmp_runtime.cpp:4514)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous read of size 4 by thread #2
==5643== Locks held: none
==5643==    at 0x51A0D79: __kmp_wait_template (kmp_wait_release.h:239)
==5643==    by 0x51A0D79: wait (kmp_wait_release.h:742)
==5643==    by 0x51A0D79: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:865)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x54d5200 is 0 bytes inside data symbol "__kmp_nth"
==5643== 
==5643== ---Thread-Announcement------------------------------------------
==5643== 
==5643== Thread #3 was created
==5643==    at 0x5A3D3DE: clone (clone.S:74)
==5643==    by 0x571F149: create_thread (createthread.c:102)
==5643==    by 0x5720E83: pthread_create@@GLIBC_2.2.5 (pthread_create.c:679)
==5643==    by 0x4C34653: pthread_create_WRK (hg_intercepts.c:427)
==5643==    by 0x4C35737: pthread_create@* (hg_intercepts.c:460)
==5643==    by 0x520E3AD: __kmp_create_worker (z_Linux_util.cpp:879)
==5643==    by 0x51D9865: __kmp_allocate_thread (kmp_runtime.cpp:4545)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 1 at 0x54FFB10 by thread #3
==5643== Locks held: none
==5643==    at 0x525495F: rml::internal::BootStrapBlocks::allocate(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:887)
==5643==    by 0x52502D3: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:627)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x5254A28: rml::internal::BootStrapBlocks::allocate(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:906)
==5643==    by 0x52502D3: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:627)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x54ffb10 is 137008 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64FC050 by thread #3
==5643== Locks held: none
==5643==    at 0x52549E6: rml::internal::BootStrapBlocks::allocate(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:897)
==5643==    by 0x52502D3: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:627)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x52549ED: rml::internal::BootStrapBlocks::allocate(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:898)
==5643==    by 0x52502D3: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:627)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x64fc050 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64FC050 by thread #3
==5643== Locks held: none
==5643==    at 0x52549ED: rml::internal::BootStrapBlocks::allocate(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:898)
==5643==    by 0x52502D3: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:627)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x52549ED: rml::internal::BootStrapBlocks::allocate(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:898)
==5643==    by 0x52502D3: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:627)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x64fc050 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 1 at 0x54FFB10 by thread #3
==5643== Locks held: none
==5643==    at 0x5254A28: rml::internal::BootStrapBlocks::allocate(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:906)
==5643==    by 0x52502D3: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:627)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x5254A28: rml::internal::BootStrapBlocks::allocate(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:906)
==5643==    by 0x52502D3: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:627)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x54ffb10 is 137008 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 1 at 0x54FFB93 by thread #3
==5643== Locks held: none
==5643==    at 0x525030D: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:636)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x52503B2: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:636)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==  Address 0x54ffb93 is 0 bytes inside data symbol "_ZN3rml8internal28RecursiveMallocCallProtector9rmc_mutexE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x54FFB50 by thread #3
==5643== Locks held: none
==5643==    at 0x5250382: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:636)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5250382: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:636)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==  Address 0x54ffb50 is 0 bytes inside data symbol "_ZN3rml8internal28RecursiveMallocCallProtector12owner_threadE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x54FFB48 by thread #3
==5643== Locks held: none
==5643==    at 0x5250385: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:636)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5250385: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:636)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==  Address 0x54ffb48 is 0 bytes inside data symbol "_ZN3rml8internal28RecursiveMallocCallProtector10autoObjPtrE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 1 at 0x54FFB93 by thread #3
==5643== Locks held: none
==5643==    at 0x52503B2: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:636)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x52503B2: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:636)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==  Address 0x54ffb93 is 0 bytes inside data symbol "_ZN3rml8internal28RecursiveMallocCallProtector9rmc_mutexE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 1 at 0x54FF8E0 by thread #3
==5643== Locks held: none
==5643==    at 0x5250400: rml::internal::AllLocalCaches::registerThread(rml::internal::TLSRemote*) (frontend.cpp:673)
==5643==    by 0x52503C6: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:637)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x525048F: rml::internal::AllLocalCaches::registerThread(rml::internal::TLSRemote*) (frontend.cpp:679)
==5643==    by 0x52503C6: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:637)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x54ff8e0 is 136448 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x54FF8D8 by thread #3
==5643== Locks held: none
==5643==    at 0x525047A: rml::internal::AllLocalCaches::registerThread(rml::internal::TLSRemote*) (frontend.cpp:675)
==5643==    by 0x52503C6: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:637)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x525048C: rml::internal::AllLocalCaches::registerThread(rml::internal::TLSRemote*) (frontend.cpp:678)
==5643==    by 0x52503C6: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:637)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x54ff8d8 is 136440 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64FF908 by thread #3
==5643== Locks held: none
==5643==    at 0x5250488: rml::internal::AllLocalCaches::registerThread(rml::internal::TLSRemote*) (frontend.cpp:677)
==5643==    by 0x52503C6: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:637)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x526F4E1: __intel_avx_rep_memset (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x5254A2F: rml::internal::BootStrapBlocks::allocate(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:908)
==5643==    by 0x52502D3: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:627)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==  Address 0x64ff908 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x54FF8D8 by thread #3
==5643== Locks held: none
==5643==    at 0x525048C: rml::internal::AllLocalCaches::registerThread(rml::internal::TLSRemote*) (frontend.cpp:678)
==5643==    by 0x52503C6: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:637)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x525048C: rml::internal::AllLocalCaches::registerThread(rml::internal::TLSRemote*) (frontend.cpp:678)
==5643==    by 0x52503C6: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:637)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x54ff8d8 is 136440 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 1 at 0x54FF8E0 by thread #3
==5643== Locks held: none
==5643==    at 0x525048F: rml::internal::AllLocalCaches::registerThread(rml::internal::TLSRemote*) (frontend.cpp:679)
==5643==    by 0x52503C6: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:637)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x525048F: rml::internal::AllLocalCaches::registerThread(rml::internal::TLSRemote*) (frontend.cpp:679)
==5643==    by 0x52503C6: rml::internal::TLSKey::createTLS(rml::internal::MemoryPool*, rml::internal::Backend*) (frontend.cpp:637)
==5643==    by 0x524F9AC: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2508)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x54ff8e0 is 136448 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x54E1D20 by thread #3
==5643== Locks held: none
==5643==    at 0x5256322: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:428)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5255D74: rml::internal::Backend::IndexedBins::tryAddBlock(int, rml::internal::FreeBlock*, bool) (backend.cpp:596)
==5643==    by 0x5255677: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1231)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x54e1d20 is 14656 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 1 at 0x54E1D30 by thread #3
==5643== Locks held: none
==5643==    at 0x52563C6: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:430)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x5255D95: rml::internal::Backend::IndexedBins::tryAddBlock(int, rml::internal::FreeBlock*, bool) (backend.cpp:601)
==5643==    by 0x5255677: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1231)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x54e1d30 is 14672 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x6410028 by thread #3
==5643== Locks held: none
==5643==    at 0x52563FA: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:438)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5255720: rml::internal::Backend::doCoalesc(rml::internal::FreeBlock*, rml::internal::MemRegion**) (backend.cpp:1095)
==5643==    by 0x5255503: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1188)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x6410028 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64BC008 by thread #3
==5643== Locks held: none
==5643==    at 0x525641D: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:438)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5257188: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:675)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==  Address 0x64bc008 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x6410040 by thread #3
==5643== Locks held: none
==5643==    at 0x5255455: rml::internal::Backend::Bin::removeBlock(rml::internal::FreeBlock*) (backend.cpp:532)
==5643==    by 0x5256534: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:484)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x525562E: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1221)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==  Address 0x6410040 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x54E1D20 by thread #3
==5643== Locks held: none
==5643==    at 0x5255459: rml::internal::Backend::Bin::removeBlock(rml::internal::FreeBlock*) (backend.cpp:532)
==5643==    by 0x5256534: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:484)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5255D74: rml::internal::Backend::IndexedBins::tryAddBlock(int, rml::internal::FreeBlock*, bool) (backend.cpp:596)
==5643==    by 0x5255677: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1231)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x54e1d20 is 14656 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x54E1D28 by thread #3
==5643== Locks held: none
==5643==    at 0x525545C: rml::internal::Backend::Bin::removeBlock(rml::internal::FreeBlock*) (backend.cpp:533)
==5643==    by 0x5256534: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:484)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5255D90: rml::internal::Backend::IndexedBins::tryAddBlock(int, rml::internal::FreeBlock*, bool) (backend.cpp:600)
==5643==    by 0x5255677: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1231)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x54e1d28 is 14664 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x6410038 by thread #3
==5643== Locks held: none
==5643==    at 0x5255462: rml::internal::Backend::Bin::removeBlock(rml::internal::FreeBlock*) (backend.cpp:534)
==5643==    by 0x5256534: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:484)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5255632: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1221)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==  Address 0x6410038 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x54E1D28 by thread #3
==5643== Locks held: none
==5643==    at 0x5255466: rml::internal::Backend::Bin::removeBlock(rml::internal::FreeBlock*) (backend.cpp:534)
==5643==    by 0x5256534: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:484)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5255D90: rml::internal::Backend::IndexedBins::tryAddBlock(int, rml::internal::FreeBlock*, bool) (backend.cpp:600)
==5643==    by 0x5255677: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1231)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x54e1d28 is 14664 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x6410050 by thread #3
==5643== Locks held: none
==5643==    at 0x5256563: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:487)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5256563: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:487)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==  Address 0x6410050 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 1 at 0x54E1D30 by thread #3
==5643== Locks held: none
==5643==    at 0x5256583: rml::internal::Backend::IndexedBins::getFromBin(int, rml::internal::BackendSync*, unsigned long, bool, bool, bool, int*) (backend.cpp:495)
==5643==    by 0x525621F: rml::internal::Backend::IndexedBins::findBlock(int, rml::internal::BackendSync*, unsigned long, bool, bool, int*) (backend.cpp:822)
==5643==    by 0x5255FB7: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:873)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x5255D95: rml::internal::Backend::IndexedBins::tryAddBlock(int, rml::internal::FreeBlock*, bool) (backend.cpp:601)
==5643==    by 0x5255677: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1231)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x54e1d30 is 14672 bytes inside data symbol "_ZN3rml8internal20defaultMemPool_spaceE"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x6410048 by thread #3
==5643== Locks held: none
==5643==    at 0x5257139: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1254)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5257139: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1254)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==  Address 0x6410048 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x6410028 by thread #3
==5643== Locks held: none
==5643==    at 0x5255720: rml::internal::Backend::doCoalesc(rml::internal::FreeBlock*, rml::internal::MemRegion**) (backend.cpp:1095)
==5643==    by 0x5255503: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1188)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5255720: rml::internal::Backend::doCoalesc(rml::internal::FreeBlock*, rml::internal::MemRegion**) (backend.cpp:1095)
==5643==    by 0x5255503: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1188)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x6410028 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 1 at 0x641005D by thread #3
==5643== Locks held: none
==5643==    at 0x5255734: rml::internal::Backend::doCoalesc(rml::internal::FreeBlock*, rml::internal::MemRegion**) (backend.cpp:1096)
==5643==    by 0x5255503: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1188)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x5255734: rml::internal::Backend::doCoalesc(rml::internal::FreeBlock*, rml::internal::MemRegion**) (backend.cpp:1096)
==5643==    by 0x5255503: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1188)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x641005d is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x6410040 by thread #3
==5643== Locks held: none
==5643==    at 0x525562E: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1221)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x525562E: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1221)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==  Address 0x6410040 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x6410038 by thread #3
==5643== Locks held: none
==5643==    at 0x5255632: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1221)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x5255632: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1221)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==  Address 0x6410038 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x6410058 by thread #3
==5643== Locks held: none
==5643==    at 0x5255636: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1222)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #2
==5643== Locks held: none
==5643==    at 0x5255636: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1222)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==  Address 0x6410058 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 1 at 0x641005C by thread #3
==5643== Locks held: none
==5643==    at 0x5255CF5: rml::internal::Backend::IndexedBins::tryAddBlock(int, rml::internal::FreeBlock*, bool) (backend.cpp:575)
==5643==    by 0x5255677: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1231)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x5255CF5: rml::internal::Backend::IndexedBins::tryAddBlock(int, rml::internal::FreeBlock*, bool) (backend.cpp:575)
==5643==    by 0x5255677: rml::internal::Backend::coalescAndPutList(rml::internal::FreeBlock*, bool, bool) (backend.cpp:1231)
==5643==    by 0x5257145: rml::internal::Backend::coalescAndPut(rml::internal::FreeBlock*, unsigned long) (backend.cpp:1256)
==5643==    by 0x52571AA: rml::internal::Backend::splitAlignedBlock(rml::internal::FreeBlock*, int, unsigned long, bool) (backend.cpp:682)
==5643==    by 0x52560AB: rml::internal::Backend::genericGetBlock(int, unsigned long, bool) (backend.cpp:915)
==5643==    by 0x524FDBD: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1030)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==  Address 0x641005c is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x408F030 by thread #3
==5643== Locks held: none
==5643==    at 0x525D9CC: rml::internal::BackRefMaster::findFreeBlock() (backref.cpp:213)
==5643==    by 0x525D868: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:260)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #2
==5643== Locks held: none
==5643==    at 0x525D8FF: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:288)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f030 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 1 at 0x408F038 by thread #3
==5643== Locks held: none
==5643==    at 0x525D879: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:265)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x525D902: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:290)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f038 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x408F018 by thread #3
==5643== Locks held: none
==5643==    at 0x525D97B: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:275)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x525D98B: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:282)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f018 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x408F018 by thread #3
==5643== Locks held: none
==5643==    at 0x525D98B: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:282)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x525D98B: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:282)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f018 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x408F030 by thread #3
==5643== Locks held: none
==5643==    at 0x525D8FF: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:288)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #2
==5643== Locks held: none
==5643==    at 0x525D8FF: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:288)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f030 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 1 at 0x408F038 by thread #3
==5643== Locks held: none
==5643==    at 0x525D902: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:290)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #2
==5643== Locks held: none
==5643==    at 0x525D902: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:290)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f038 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 1 at 0x408F038 by thread #1
==5643== Locks held: none
==5643==    at 0x525D879: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:265)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250D71: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x51D93F5: __kmp_allocate_thread (kmp_runtime.cpp:4437)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #3
==5643== Locks held: none
==5643==    at 0x525D902: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:290)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f038 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x408F018 by thread #1
==5643== Locks held: none
==5643==    at 0x525D97B: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:275)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250D71: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x51D93F5: __kmp_allocate_thread (kmp_runtime.cpp:4437)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #3
==5643== Locks held: none
==5643==    at 0x525D98B: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:282)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f018 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x408F018 by thread #1
==5643== Locks held: none
==5643==    at 0x525D98B: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:282)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250D71: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x51D93F5: __kmp_allocate_thread (kmp_runtime.cpp:4437)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #3
==5643== Locks held: none
==5643==    at 0x525D98B: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:282)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f018 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x408F030 by thread #1
==5643== Locks held: none
==5643==    at 0x525D8FF: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:288)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250D71: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x51D93F5: __kmp_allocate_thread (kmp_runtime.cpp:4437)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #3
==5643== Locks held: none
==5643==    at 0x525D8FF: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:288)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f030 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 1 at 0x408F038 by thread #1
==5643== Locks held: none
==5643==    at 0x525D902: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:290)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250D71: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x51D93F5: __kmp_allocate_thread (kmp_runtime.cpp:4437)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 1 by thread #3
==5643== Locks held: none
==5643==    at 0x525D902: rml::internal::BackRefIdx::newBackRef(bool) (backref.cpp:290)
==5643==    by 0x524FE08: rml::internal::MemoryPool::getEmptyBlock(unsigned long) (frontend.cpp:1035)
==5643==    by 0x524F6DB: rml::internal::internalPoolMalloc(rml::internal::MemoryPool*, unsigned long) (frontend.cpp:2562)
==5643==    by 0x5250CB4: scalable_aligned_malloc (frontend.cpp:3032)
==5643==    by 0x5184E28: ___kmp_allocate (kmp_alloc.cpp:1630)
==5643==    by 0x518458B: KMPNativeAffinity::allocate_mask() (kmp_affinity.h:334)
==5643==    by 0x51718CE: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4693)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==  Address 0x408f038 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x64EE420 by thread #1
==5643== Locks held: none
==5643==    at 0x51E2DF3: _INTERNAL_25_______src_kmp_runtime_cpp_6bf59e22::__kmp_initialize_info(kmp_info*, kmp_team*, int, int) (kmp_runtime.cpp:4210)
==5643==    by 0x51DDAC1: __kmp_allocate_team (kmp_runtime.cpp:5267)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous read of size 4 by thread #2
==5643== Locks held: none
==5643==    at 0x520DA1D: __kmp_itt_thread_name (kmp_itt.inl:993)
==5643==    by 0x520DA1D: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:545)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ee420 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x64EE598 by thread #1
==5643== Locks held: none
==5643==    at 0x51E2E03: _INTERNAL_25_______src_kmp_runtime_cpp_6bf59e22::__kmp_initialize_info(kmp_info*, kmp_team*, int, int) (kmp_runtime.cpp:4215)
==5643==    by 0x51DDAC1: __kmp_allocate_team (kmp_runtime.cpp:5267)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #2
==5643== Locks held: none
==5643==    at 0x51A0E11: __kmp_wait_template (kmp_wait_release.h:269)
==5643==    by 0x51A0E11: wait (kmp_wait_release.h:742)
==5643==    by 0x51A0E11: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:865)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ee598 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x64EE4DC by thread #1
==5643== Locks held: none
==5643==    at 0x51E2E1D: _INTERNAL_25_______src_kmp_runtime_cpp_6bf59e22::__kmp_initialize_info(kmp_info*, kmp_team*, int, int) (kmp_runtime.cpp:4221)
==5643==    by 0x51DDAC1: __kmp_allocate_team (kmp_runtime.cpp:5267)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #2
==5643== Locks held: none
==5643==    at 0x51716B1: __kmp_affinity_set_init_mask (kmp_affinity.cpp:4748)
==5643==    by 0x520DA5A: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:549)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ee4dc is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643==  Lock at 0x64EE980 was first observed
==5643==    at 0x4C35A83: pthread_mutex_init (hg_intercepts.c:787)
==5643==    by 0x5211F97: __kmp_suspend_initialize_thread (z_Linux_util.cpp:1707)
==5643==    by 0x5211F97: __kmp_suspend_template (z_Linux_util.cpp:1828)
==5643==    by 0x5211F97: __kmp_suspend_64 (z_Linux_util.cpp:2019)
==5643==    by 0x51A0F12: suspend (kmp_wait_release.h:731)
==5643==    by 0x51A0F12: __kmp_wait_template (kmp_wait_release.h:343)
==5643==    by 0x51A0F12: wait (kmp_wait_release.h:742)
==5643==    by 0x51A0F12: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:865)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ee980 is in a rw- anonymous segment
==5643== 
==5643== Possible data race during write of size 8 at 0x64EE558 by thread #1
==5643== Locks held: none
==5643==    at 0x51E2E75: _INTERNAL_25_______src_kmp_runtime_cpp_6bf59e22::__kmp_initialize_info(kmp_info*, kmp_team*, int, int) (kmp_runtime.cpp:4230)
==5643==    by 0x51DDAC1: __kmp_allocate_team (kmp_runtime.cpp:5267)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: 1, at address 0x64EE980
==5643==    at 0x5211A37: __kmp_suspend_template (z_Linux_util.cpp:1858)
==5643==    by 0x5211A37: __kmp_suspend_64 (z_Linux_util.cpp:2019)
==5643==    by 0x51A0F12: suspend (kmp_wait_release.h:731)
==5643==    by 0x51A0F12: __kmp_wait_template (kmp_wait_release.h:343)
==5643==    by 0x51A0F12: wait (kmp_wait_release.h:742)
==5643==    by 0x51A0F12: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:865)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ee558 is in a rw- anonymous segment
==5643== 
==5643== ---Thread-Announcement------------------------------------------
==5643== 
==5643== Thread #5 was created
==5643==    at 0x5A3D3DE: clone (clone.S:74)
==5643==    by 0x571F149: create_thread (createthread.c:102)
==5643==    by 0x5720E83: pthread_create@@GLIBC_2.2.5 (pthread_create.c:679)
==5643==    by 0x4C34653: pthread_create_WRK (hg_intercepts.c:427)
==5643==    by 0x4C35737: pthread_create@* (hg_intercepts.c:460)
==5643==    by 0x520E3AD: __kmp_create_worker (z_Linux_util.cpp:879)
==5643==    by 0x51D9865: __kmp_allocate_thread (kmp_runtime.cpp:4545)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x64AE9C0 by thread #1
==5643== Locks held: none
==5643==    at 0x5213BFE: __kmp_suspend_initialize_thread (z_Linux_util.cpp:1700)
==5643==    by 0x5213BFE: __kmp_resume_template (z_Linux_util.cpp:2050)
==5643==    by 0x5213BFE: __kmp_resume_64 (z_Linux_util.cpp:2117)
==5643==    by 0x51A0AF7: resume (kmp_wait_release.h:732)
==5643==    by 0x51A0AF7: __kmp_release_template (kmp_wait_release.h:424)
==5643==    by 0x51A0AF7: release (kmp_wait_release.h:745)
==5643==    by 0x51A0AF7: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:965)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #5
==5643== Locks held: none
==5643==    at 0x5211FA8: __kmp_suspend_initialize_thread (z_Linux_util.cpp:1710)
==5643==    by 0x5211FA8: __kmp_suspend_template (z_Linux_util.cpp:1828)
==5643==    by 0x5211FA8: __kmp_suspend_64 (z_Linux_util.cpp:2019)
==5643==    by 0x51A0F12: suspend (kmp_wait_release.h:731)
==5643==    by 0x51A0F12: __kmp_wait_template (kmp_wait_release.h:343)
==5643==    by 0x51A0F12: wait (kmp_wait_release.h:742)
==5643==    by 0x51A0F12: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:865)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ae9c0 is in a rw- anonymous segment
==5643== 
==5643== ---Thread-Announcement------------------------------------------
==5643== 
==5643== Thread #8 was created
==5643==    at 0x5A3D3DE: clone (clone.S:74)
==5643==    by 0x571F149: create_thread (createthread.c:102)
==5643==    by 0x5720E83: pthread_create@@GLIBC_2.2.5 (pthread_create.c:679)
==5643==    by 0x4C34653: pthread_create_WRK (hg_intercepts.c:427)
==5643==    by 0x4C35737: pthread_create@* (hg_intercepts.c:460)
==5643==    by 0x520E3AD: __kmp_create_worker (z_Linux_util.cpp:879)
==5643==    by 0x51D9865: __kmp_allocate_thread (kmp_runtime.cpp:4545)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x64A29C0 by thread #5
==5643== Locks held: none
==5643==    at 0x5213BFE: __kmp_suspend_initialize_thread (z_Linux_util.cpp:1700)
==5643==    by 0x5213BFE: __kmp_resume_template (z_Linux_util.cpp:2050)
==5643==    by 0x5213BFE: __kmp_resume_64 (z_Linux_util.cpp:2117)
==5643==    by 0x51A0AF7: resume (kmp_wait_release.h:732)
==5643==    by 0x51A0AF7: __kmp_release_template (kmp_wait_release.h:424)
==5643==    by 0x51A0AF7: release (kmp_wait_release.h:745)
==5643==    by 0x51A0AF7: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:965)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #8
==5643== Locks held: none
==5643==    at 0x5211FA8: __kmp_suspend_initialize_thread (z_Linux_util.cpp:1710)
==5643==    by 0x5211FA8: __kmp_suspend_template (z_Linux_util.cpp:1828)
==5643==    by 0x5211FA8: __kmp_suspend_64 (z_Linux_util.cpp:2019)
==5643==    by 0x51A0F12: suspend (kmp_wait_release.h:731)
==5643==    by 0x51A0F12: __kmp_wait_template (kmp_wait_release.h:343)
==5643==    by 0x51A0F12: wait (kmp_wait_release.h:742)
==5643==    by 0x51A0F12: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:865)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64a29c0 is in a rw- anonymous segment
==5643== 
==5643== ---Thread-Announcement------------------------------------------
==5643== 
==5643== Thread #4 was created
==5643==    at 0x5A3D3DE: clone (clone.S:74)
==5643==    by 0x571F149: create_thread (createthread.c:102)
==5643==    by 0x5720E83: pthread_create@@GLIBC_2.2.5 (pthread_create.c:679)
==5643==    by 0x4C34653: pthread_create_WRK (hg_intercepts.c:427)
==5643==    by 0x4C35737: pthread_create@* (hg_intercepts.c:460)
==5643==    by 0x520E3AD: __kmp_create_worker (z_Linux_util.cpp:879)
==5643==    by 0x51D9865: __kmp_allocate_thread (kmp_runtime.cpp:4545)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x1FFEFFDD84 by thread #8
==5643== Locks held: none
==5643==    at 0x403459: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #4
==5643== Locks held: none
==5643==    at 0x403459: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffdd84 is on thread #1's stack
==5643==  in frame #10, created by build_neighbour_list (build_neighbour_list.c:74)
==5643== 
==5643== ---Thread-Announcement------------------------------------------
==5643== 
==5643== Thread #6 was created
==5643==    at 0x5A3D3DE: clone (clone.S:74)
==5643==    by 0x571F149: create_thread (createthread.c:102)
==5643==    by 0x5720E83: pthread_create@@GLIBC_2.2.5 (pthread_create.c:679)
==5643==    by 0x4C34653: pthread_create_WRK (hg_intercepts.c:427)
==5643==    by 0x4C35737: pthread_create@* (hg_intercepts.c:460)
==5643==    by 0x520E3AD: __kmp_create_worker (z_Linux_util.cpp:879)
==5643==    by 0x51D9865: __kmp_allocate_thread (kmp_runtime.cpp:4545)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x1FFEFFDD84 by thread #1
==5643== Locks held: none
==5643==    at 0x403459: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DCB35: __kmp_fork_call (kmp_runtime.cpp:2426)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #6
==5643== Locks held: none
==5643==    at 0x403459: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffdd84 is on thread #1's stack
==5643==  in frame #5, created by build_neighbour_list (build_neighbour_list.c:74)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x64EF7C0 by thread #2
==5643== Locks held: none
==5643==    at 0x5213BFE: __kmp_suspend_initialize_thread (z_Linux_util.cpp:1700)
==5643==    by 0x5213BFE: __kmp_resume_template (z_Linux_util.cpp:2050)
==5643==    by 0x5213BFE: __kmp_resume_64 (z_Linux_util.cpp:2117)
==5643==    by 0x519E401: resume (kmp_wait_release.h:732)
==5643==    by 0x519E401: __kmp_release_template (kmp_wait_release.h:424)
==5643==    by 0x519E401: release (kmp_wait_release.h:745)
==5643==    by 0x519E401: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_gather(barrier_type, kmp_info*, int, int, void (*)(void*, void*), void*) (kmp_barrier.cpp:765)
==5643==    by 0x51A18CE: __kmp_join_barrier(int) (kmp_barrier.cpp:1968)
==5643==    by 0x51DACED: __kmp_launch_thread (kmp_runtime.cpp:5828)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x5211FA8: __kmp_suspend_initialize_thread (z_Linux_util.cpp:1710)
==5643==    by 0x5211FA8: __kmp_suspend_template (z_Linux_util.cpp:1828)
==5643==    by 0x5211FA8: __kmp_suspend_64 (z_Linux_util.cpp:2019)
==5643==    by 0x519E1CC: suspend (kmp_wait_release.h:731)
==5643==    by 0x519E1CC: __kmp_wait_template (kmp_wait_release.h:343)
==5643==    by 0x519E1CC: wait (kmp_wait_release.h:742)
==5643==    by 0x519E1CC: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_gather(barrier_type, kmp_info*, int, int, void (*)(void*, void*), void*) (kmp_barrier.cpp:791)
==5643==    by 0x51A18CE: __kmp_join_barrier(int) (kmp_barrier.cpp:1968)
==5643==    by 0x51E02F1: __kmp_internal_join (kmp_runtime.cpp:7428)
==5643==    by 0x51DFAA2: __kmp_join_call (kmp_runtime.cpp:2552)
==5643==    by 0x51A4AD4: __kmpc_fork_call (kmp_csupport.cpp:358)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643==  Address 0x64ef7c0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64E2B80 by thread #1
==5643== Locks held: none
==5643==    at 0x519DFD5: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_gather(barrier_type, kmp_info*, int, int, void (*)(void*, void*), void*) (kmp_barrier.cpp:816)
==5643==    by 0x51A18CE: __kmp_join_barrier(int) (kmp_barrier.cpp:1968)
==5643==    by 0x51E02F1: __kmp_internal_join (kmp_runtime.cpp:7428)
==5643==    by 0x51DFAA2: __kmp_join_call (kmp_runtime.cpp:2552)
==5643==    by 0x51A4AD4: __kmpc_fork_call (kmp_csupport.cpp:358)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #5
==5643== Locks held: none
==5643==    at 0x519DDB8: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_gather(barrier_type, kmp_info*, int, int, void (*)(void*, void*), void*) (kmp_barrier.cpp:771)
==5643==    by 0x51A18CE: __kmp_join_barrier(int) (kmp_barrier.cpp:1968)
==5643==    by 0x51DACED: __kmp_launch_thread (kmp_runtime.cpp:5828)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64e2b80 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64E2D18 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA931: __kmp_free_team (kmp_runtime.cpp:5523)
==5643==    by 0x51DFD8E: __kmp_join_call (kmp_runtime.cpp:2692)
==5643==    by 0x51A4AD4: __kmpc_fork_call (kmp_csupport.cpp:358)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #3
==5643== Locks held: none
==5643==    at 0x51DAC48: __kmp_launch_thread (kmp_runtime.cpp:5789)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64e2d18 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x1FFEFFDD84 by thread #1
==5643== Locks held: none
==5643==    at 0x4031A0: build_neighbour_list (build_neighbour_list.c:87)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #3
==5643== Locks held: none
==5643==    at 0x403459: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffdd84 is on thread #1's stack
==5643==  in frame #0, created by build_neighbour_list (build_neighbour_list.c:74)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5FAF8A8 by thread #1
==5643== Locks held: none
==5643==    at 0x40754C: main (main.c:89)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #3
==5643== Locks held: none
==5643==    at 0x403A16: build_neighbour_list_one_frame (build_neighbour_list.c:136)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==  Address 0x5faf8a8 is 1,000 bytes inside a block of size 3,312 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x401BCD: read_system (read_system.c:152)
==5643==    by 0x40735B: main (main.c:63)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x5FAF8A0 by thread #1
==5643== Locks held: none
==5643==    at 0x4075C2: main (main.c:91)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #3
==5643== Locks held: none
==5643==    at 0x403A45: build_neighbour_list_one_frame (build_neighbour_list.c:139)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==  Address 0x5faf8a0 is 992 bytes inside a block of size 3,312 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x401BCD: read_system (read_system.c:152)
==5643==    by 0x40735B: main (main.c:63)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5F30030 by thread #1
==5643== Locks held: none
==5643==    at 0x4075C9: main (main.c:91)
==5643==  Address 0x5f30030 is 112 bytes inside a block of size 4,176 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x403718: build_neighbour_list_one_frame (build_neighbour_list.c:116)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Block was alloc'd by thread #3
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64E2D18 by thread #1
==5643== Locks held: none
==5643==    at 0x51DC691: __kmp_fork_call (kmp_runtime.cpp:2219)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #3
==5643== Locks held: none
==5643==    at 0x51DAC48: __kmp_launch_thread (kmp_runtime.cpp:5789)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64e2d18 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64AE6C0 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A3D: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A3D: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BAF: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BAF: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ae6c0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64AE6C8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A44: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A44: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BB7: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BB7: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ae6c8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64AE6D0 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A4C: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A4C: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BC0: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BC0: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ae6d0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64AE6D8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A54: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A54: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BC9: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BC9: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ae6d8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64AE6E0 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A5C: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A5C: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BD2: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BD2: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ae6e0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64AE6E8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A64: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A64: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BDB: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BDB: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ae6e8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6F0 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A9E: test_then_add4 (kmp_wait_release.h:453)
==5643==    by 0x51A0A9E: internal_release (kmp_wait_release.h:549)
==5643==    by 0x51A0A9E: __kmp_release_template (kmp_wait_release.h:406)
==5643==    by 0x51A0A9E: release (kmp_wait_release.h:745)
==5643==    by 0x51A0A9E: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:965)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0961: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:891)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64ae6f0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64AE6F0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0961: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:891)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A9E: test_then_add4 (kmp_wait_release.h:453)
==5643==    by 0x51A0A9E: internal_release (kmp_wait_release.h:549)
==5643==    by 0x51A0A9E: __kmp_release_template (kmp_wait_release.h:406)
==5643==    by 0x51A0A9E: release (kmp_wait_release.h:745)
==5643==    by 0x51A0A9E: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:965)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6f0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6C0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A3A: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A3A: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A3D: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A3D: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6c0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64A26C0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A3D: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A3D: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #8
==5643== Locks held: none
==5643==    at 0x51A0BAF: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BAF: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64a26c0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6C8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A40: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A40: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A44: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A44: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6c8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64A26C8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A44: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A44: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #8
==5643== Locks held: none
==5643==    at 0x51A0BB7: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BB7: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64a26c8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6D0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A48: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A48: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A4C: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A4C: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6d0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64A26D0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A4C: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A4C: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #8
==5643== Locks held: none
==5643==    at 0x51A0BC0: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BC0: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64a26d0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6D8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A50: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A50: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A54: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A54: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6d8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64A26D8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A54: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A54: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #8
==5643== Locks held: none
==5643==    at 0x51A0BC9: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BC9: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64a26d8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6E0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A58: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A58: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A5C: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A5C: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6e0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64A26E0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A5C: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A5C: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #8
==5643== Locks held: none
==5643==    at 0x51A0BD2: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BD2: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64a26e0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6E8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A60: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A60: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A64: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A64: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6e8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64A26E8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A64: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A64: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #8
==5643== Locks held: none
==5643==    at 0x51A0BDB: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BDB: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64a26e8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64A26F0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0A9E: test_then_add4 (kmp_wait_release.h:453)
==5643==    by 0x51A0A9E: internal_release (kmp_wait_release.h:549)
==5643==    by 0x51A0A9E: __kmp_release_template (kmp_wait_release.h:406)
==5643==    by 0x51A0A9E: release (kmp_wait_release.h:745)
==5643==    by 0x51A0A9E: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:965)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #8
==5643== Locks held: none
==5643==    at 0x51A0961: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:891)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64a26f0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64E2D18 by thread #8
==5643== Locks held: none
==5643==    at 0x51DAC48: __kmp_launch_thread (kmp_runtime.cpp:5789)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA931: __kmp_free_team (kmp_runtime.cpp:5523)
==5643==    by 0x51DFD8E: __kmp_join_call (kmp_runtime.cpp:2692)
==5643==    by 0x51A4AD4: __kmpc_fork_call (kmp_csupport.cpp:358)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643==  Address 0x64e2d18 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x1FFEFFDE08 by thread #8
==5643== Locks held: none
==5643==    at 0x40333F: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffde08 is on thread #1's stack
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x1FFEFFDE00 by thread #8
==5643== Locks held: none
==5643==    at 0x40334E: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffde00 is on thread #1's stack
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x1FFEFFDDF0 by thread #8
==5643== Locks held: none
==5643==    at 0x40335C: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffddf0 is on thread #1's stack
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x1FFEFFDDF8 by thread #8
==5643== Locks held: none
==5643==    at 0x40336A: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffddf8 is on thread #1's stack
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5F04070 by thread #8
==5643== Locks held: none
==5643==    at 0x404D2E: build_neighbour_coord_cur_atom (build_neighbour_list.c:282)
==5643==    by 0x403B08: build_neighbour_list_one_frame (build_neighbour_list.c:149)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x40784B: main (main.c:117)
==5643==  Address 0x5f04070 is 48 bytes inside a block of size 64 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x4072F1: main (main.c:50)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5F04070 by thread #8
==5643== Locks held: none
==5643==    at 0x404EAC: build_neighbour_coord_cur_atom (build_neighbour_list.c:294)
==5643==    by 0x403B08: build_neighbour_list_one_frame (build_neighbour_list.c:149)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x40784B: main (main.c:117)
==5643==  Address 0x5f04070 is 48 bytes inside a block of size 64 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x4072F1: main (main.c:50)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5F04070 by thread #8
==5643== Locks held: none
==5643==    at 0x405420: build_neighbour_coord_cur_atom (build_neighbour_list.c:354)
==5643==    by 0x403B08: build_neighbour_list_one_frame (build_neighbour_list.c:149)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x40784B: main (main.c:117)
==5643==  Address 0x5f04070 is 48 bytes inside a block of size 64 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x4072F1: main (main.c:50)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6C0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BAF: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BAF: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A3D: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A3D: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6c0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6C8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BB7: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BB7: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A44: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A44: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6c8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6D0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BC0: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BC0: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A4C: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A4C: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6d0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6D8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BC9: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BC9: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A54: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A54: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6d8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6E0 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BD2: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BD2: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A5C: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A5C: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6e0 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64AE6E8 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0BDB: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0BDB: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:974)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A0A64: copy_icvs (kmp.h:1887)
==5643==    by 0x51A0A64: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:953)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DCAF4: __kmp_fork_call (kmp_runtime.cpp:2407)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x40786F: main (main.c:119)
==5643==  Address 0x64ae6e8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5F04070 by thread #5
==5643== Locks held: none
==5643==    at 0x404F8A: build_neighbour_coord_cur_atom (build_neighbour_list.c:323)
==5643==    by 0x403B08: build_neighbour_list_one_frame (build_neighbour_list.c:149)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x40784B: main (main.c:117)
==5643==  Address 0x5f04070 is 48 bytes inside a block of size 64 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x4072F1: main (main.c:50)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5F04070 by thread #5
==5643== Locks held: none
==5643==    at 0x4052F5: build_neighbour_coord_cur_atom (build_neighbour_list.c:349)
==5643==    by 0x403B08: build_neighbour_list_one_frame (build_neighbour_list.c:149)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x40784B: main (main.c:117)
==5643==  Address 0x5f04070 is 48 bytes inside a block of size 64 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x4072F1: main (main.c:50)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5F04070 by thread #5
==5643== Locks held: none
==5643==    at 0x404F07: build_neighbour_coord_cur_atom (build_neighbour_list.c:294)
==5643==    by 0x403B08: build_neighbour_list_one_frame (build_neighbour_list.c:149)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x40784B: main (main.c:117)
==5643==  Address 0x5f04070 is 48 bytes inside a block of size 64 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x4072F1: main (main.c:50)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5F04070 by thread #5
==5643== Locks held: none
==5643==    at 0x404FB9: build_neighbour_coord_cur_atom (build_neighbour_list.c:323)
==5643==    by 0x403B08: build_neighbour_list_one_frame (build_neighbour_list.c:149)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x40784B: main (main.c:117)
==5643==  Address 0x5f04070 is 48 bytes inside a block of size 64 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x4072F1: main (main.c:50)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x5F04070 by thread #6
==5643== Locks held: none
==5643==    at 0x4051B7: build_neighbour_coord_cur_atom (build_neighbour_list.c:347)
==5643==    by 0x403B08: build_neighbour_list_one_frame (build_neighbour_list.c:149)
==5643==    by 0x403445: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x40784B: main (main.c:117)
==5643==  Address 0x5f04070 is 48 bytes inside a block of size 64 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x4072F1: main (main.c:50)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64E2B80 by thread #5
==5643== Locks held: none
==5643==    at 0x519DDB8: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_gather(barrier_type, kmp_info*, int, int, void (*)(void*, void*), void*) (kmp_barrier.cpp:771)
==5643==    by 0x51A18CE: __kmp_join_barrier(int) (kmp_barrier.cpp:1968)
==5643==    by 0x51DACED: __kmp_launch_thread (kmp_runtime.cpp:5828)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x519DFD5: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_gather(barrier_type, kmp_info*, int, int, void (*)(void*, void*), void*) (kmp_barrier.cpp:816)
==5643==    by 0x51A18CE: __kmp_join_barrier(int) (kmp_barrier.cpp:1968)
==5643==    by 0x51E02F1: __kmp_internal_join (kmp_runtime.cpp:7428)
==5643==    by 0x51DFAA2: __kmp_join_call (kmp_runtime.cpp:2552)
==5643==    by 0x51A4AD4: __kmpc_fork_call (kmp_csupport.cpp:358)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643==  Address 0x64e2b80 is in a rw- anonymous segment
==5643== 
==5643== 
==5643== More than 100 errors detected.  Subsequent errors
==5643== will still be recorded, but in less detail than before.
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x1FFEFFDD84 by thread #1
==5643== Locks held: none
==5643==    at 0x4031A0: build_neighbour_list (build_neighbour_list.c:87)
==5643==    by 0x40786F: main (main.c:119)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #8
==5643== Locks held: none
==5643==    at 0x403459: build_neighbour_list (build_neighbour_list.c:84)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffdd84 is on thread #1's stack
==5643==  in frame #0, created by build_neighbour_list (build_neighbour_list.c:74)
==5643== 
==5643== ---Thread-Announcement------------------------------------------
==5643== 
==5643== Thread #7 was created
==5643==    at 0x5A3D3DE: clone (clone.S:74)
==5643==    by 0x571F149: create_thread (createthread.c:102)
==5643==    by 0x5720E83: pthread_create@@GLIBC_2.2.5 (pthread_create.c:679)
==5643==    by 0x4C34653: pthread_create_WRK (hg_intercepts.c:427)
==5643==    by 0x4C35737: pthread_create@* (hg_intercepts.c:460)
==5643==    by 0x520E3AD: __kmp_create_worker (z_Linux_util.cpp:879)
==5643==    by 0x51D9865: __kmp_allocate_thread (kmp_runtime.cpp:4545)
==5643==    by 0x51DE506: __kmp_allocate_team (kmp_runtime.cpp:5223)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64E2C88 by thread #1
==5643== Locks held: none
==5643==    at 0x51DEC38: __kmp_reinitialize_team (kmp_runtime.cpp:4567)
==5643==    by 0x51DEC38: __kmp_allocate_team (kmp_runtime.cpp:5064)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x405D96: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #7
==5643== Locks held: none
==5643==    at 0x51A0B87: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:972)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64e2c88 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x64E2D08 by thread #1
==5643== Locks held: none
==5643==    at 0x51DDE0D: __kmp_allocate_team (kmp_runtime.cpp:5334)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x405D96: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643== 
==5643== This conflicts with a previous read of size 4 by thread #7
==5643== Locks held: none
==5643==    at 0x51DB525: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64e2d08 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64E2D30 by thread #1
==5643== Locks held: none
==5643==    at 0x51DC8BD: __kmp_fork_call (kmp_runtime.cpp:2331)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x405D96: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643== 
==5643== This conflicts with a previous read of size 8 by thread #7
==5643== Locks held: none
==5643==    at 0x520D79D: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x64e2d30 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64E2C88 by thread #5
==5643== Locks held: none
==5643==    at 0x51A0B87: _INTERNAL_25_______src_kmp_barrier_cpp_ce635104::__kmp_hyper_barrier_release(barrier_type, kmp_info*, int, int, int, void*) (kmp_barrier.cpp:972)
==5643==    by 0x51A2555: __kmp_fork_barrier(int, int) (kmp_barrier.cpp:2177)
==5643==    by 0x51DAC1E: __kmp_launch_thread (kmp_runtime.cpp:5768)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51DEC38: __kmp_reinitialize_team (kmp_runtime.cpp:4567)
==5643==    by 0x51DEC38: __kmp_allocate_team (kmp_runtime.cpp:5064)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x405D96: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Address 0x64e2c88 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x64E2D08 by thread #5
==5643== Locks held: none
==5643==    at 0x51DB525: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 4 by thread #1
==5643== Locks held: none
==5643==    at 0x51DDE0D: __kmp_allocate_team (kmp_runtime.cpp:5334)
==5643==    by 0x51DCF56: __kmp_fork_call (kmp_runtime.cpp:2198)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x405D96: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Address 0x64e2d08 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64E2D48 by thread #5
==5643== Locks held: none
==5643==    at 0x520D782: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51DC8BD: __kmp_fork_call (kmp_runtime.cpp:2331)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x405D96: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Address 0x64e2d48 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64E2D40 by thread #5
==5643== Locks held: none
==5643==    at 0x520D78B: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51DC8BD: __kmp_fork_call (kmp_runtime.cpp:2331)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x405D96: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Address 0x64e2d40 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64E2D38 by thread #5
==5643== Locks held: none
==5643==    at 0x520D794: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51DC8BD: __kmp_fork_call (kmp_runtime.cpp:2331)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x405D96: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Address 0x64e2d38 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64E2D30 by thread #5
==5643== Locks held: none
==5643==    at 0x520D79D: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51DC8BD: __kmp_fork_call (kmp_runtime.cpp:2331)
==5643==    by 0x51A4ABB: __kmpc_fork_call (kmp_csupport.cpp:342)
==5643==    by 0x405D96: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Address 0x64e2d30 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x1FFEFFDCF8 by thread #5
==5643== Locks held: none
==5643==    at 0x405F55: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffdcf8 is on thread #1's stack
==5643==  in frame #5, created by convert_coord_DeePMD (convert_coord.c:56)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x1FFEFFDCE8 by thread #5
==5643== Locks held: none
==5643==    at 0x405F66: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51E2C42: _INTERNAL_25_______src_kmp_runtime_cpp_6bf59e22::__kmp_do_serial_initialize() (kmp_runtime.cpp:6869)
==5643==    by 0x4012DF: ??? (in /home/aurora/Documents/Study/Machine_Learning/DeePMD_torch/c/a.out)
==5643==    by 0x51D79DF: __kmp_get_global_thread_id_reg (kmp_runtime.cpp:290)
==5643==    by 0x40306D: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643==  Address 0x1ffeffdce8 is on thread #1's stack
==5643==  in frame #5, created by convert_coord_DeePMD (convert_coord.c:56)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x1FFEFFDCF0 by thread #5
==5643== Locks held: none
==5643==    at 0x405F77: convert_coord_DeePMD (convert_coord.c:74)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x1ffeffdcf0 is on thread #1's stack
==5643==  in frame #5, created by convert_coord_DeePMD (convert_coord.c:56)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x1FFEFFDD20 by thread #5
==5643== Locks held: none
==5643==    at 0x405FFC: convert_coord_DeePMD (convert_coord.c:77)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A4A1B: __kmpc_fork_call (kmp_csupport.cpp:302)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643==  Address 0x1ffeffdd20 is on thread #1's stack
==5643==  in frame #5, created by convert_coord_DeePMD (convert_coord.c:56)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x9A0BEE0 by thread #5
==5643== Locks held: none
==5643==    at 0x406004: convert_coord_DeePMD (convert_coord.c:77)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x9a0bee0 is 288 bytes inside a block of size 552 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x405A6D: convert_coord_DeePMD (convert_coord.c:62)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x9A0BEE4 by thread #5
==5643== Locks held: none
==5643==    at 0x406075: convert_coord_DeePMD (convert_coord.c:79)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x9a0bee4 is 292 bytes inside a block of size 552 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x405A6D: convert_coord_DeePMD (convert_coord.c:62)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x9A0BEF0 by thread #5
==5643== Locks held: none
==5643==    at 0x40650F: convert_coord_DeePMD (convert_coord.c:95)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x9a0bef0 is 304 bytes inside a block of size 552 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x405A6D: convert_coord_DeePMD (convert_coord.c:62)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0xA10A4C0 by thread #5
==5643== Locks held: none
==5643==    at 0x406520: convert_coord_DeePMD (convert_coord.c:95)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0xa10a4c0 is 0 bytes inside a block of size 464 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x405B7D: convert_coord_DeePMD (convert_coord.c:68)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0xA1B89C0 by thread #5
==5643== Locks held: none
==5643==    at 0x406527: convert_coord_DeePMD (convert_coord.c:95)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0xa1b89c0 is 0 bytes inside a block of size 6,400 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x405BFE: convert_coord_DeePMD (convert_coord.c:71)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x9A0BEE4 by thread #5
==5643== Locks held: none
==5643==    at 0x4060B1: convert_coord_DeePMD (convert_coord.c:79)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x9a0bee4 is 292 bytes inside a block of size 552 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x405A6D: convert_coord_DeePMD (convert_coord.c:62)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x9A0BEE0 by thread #5
==5643== Locks held: none
==5643==    at 0x40603F: convert_coord_DeePMD (convert_coord.c:77)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x9a0bee0 is 288 bytes inside a block of size 552 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x405A6D: convert_coord_DeePMD (convert_coord.c:62)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x1FFEFFDD20 by thread #5
==5643== Locks held: none
==5643==    at 0x4064FF: convert_coord_DeePMD (convert_coord.c:95)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A4A1B: __kmpc_fork_call (kmp_csupport.cpp:302)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643==  Address 0x1ffeffdd20 is on thread #1's stack
==5643==  in frame #5, created by convert_coord_DeePMD (convert_coord.c:56)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x1FFEFFDD20 by thread #5
==5643== Locks held: none
==5643==    at 0x4060A9: convert_coord_DeePMD (convert_coord.c:79)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #1
==5643== Locks held: none
==5643==    at 0x51A4A1B: __kmpc_fork_call (kmp_csupport.cpp:302)
==5643==    by 0x40319B: build_neighbour_list (build_neighbour_list.c:79)
==5643==    by 0x407478: main (main.c:80)
==5643==  Address 0x1ffeffdd20 is on thread #1's stack
==5643==  in frame #5, created by convert_coord_DeePMD (convert_coord.c:56)
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x9F2F060 by thread #1
==5643== Locks held: none
==5643==    at 0x407BF6: main (main.c:147)
==5643== 
==5643== This conflicts with a previous write of size 8 by thread #2
==5643== Locks held: none
==5643==    at 0x406527: convert_coord_DeePMD (convert_coord.c:95)
==5643==    by 0x520D7A2: __kmp_invoke_microtask (in /opt/intel/compilers_and_libraries_2018.1.163/linux/compiler/lib/intel64_lin/libiomp5.so)
==5643==    by 0x51DB539: __kmp_invoke_task_func (kmp_runtime.cpp:7212)
==5643==    by 0x51DACC9: __kmp_launch_thread (kmp_runtime.cpp:5810)
==5643==    by 0x520DBFF: _INTERNAL_26_______src_z_Linux_util_cpp_c3d2e46c::__kmp_launch_worker(void*) (z_Linux_util.cpp:585)
==5643==    by 0x4C34847: mythread_wrapper (hg_intercepts.c:389)
==5643==    by 0x57206B9: start_thread (pthread_create.c:333)
==5643==    by 0x5A3D41C: clone (clone.S:109)
==5643==  Address 0x9f2f060 is 0 bytes inside a block of size 6,400 alloc'd
==5643==    at 0x4C30D98: calloc (vg_replace_malloc.c:711)
==5643==    by 0x405BFE: convert_coord_DeePMD (convert_coord.c:71)
==5643==    by 0x4059E8: convert_coord (convert_coord.c:40)
==5643==    by 0x407A5F: main (main.c:133)
==5643==  Block was alloc'd by thread #1
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64E2D18 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA948: __kmp_free_team (kmp_runtime.cpp:5523)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64e2d18 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 4 at 0x64EE598 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA9BC: __kmp_free_team (kmp_runtime.cpp:5536)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee598 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64EE570 by thread #1
==5643== Locks held: none
==5643==    at 0x51DAAC0: __kmp_free_team (kmp_runtime.cpp:5560)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee570 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64ED070 by thread #1
==5643== Locks held: none
==5643==    at 0x51DAAB4: __kmp_free_team (kmp_runtime.cpp:5560)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ed070 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64E2CA8 by thread #1
==5643== Locks held: none
==5643==    at 0x51DAAF2: __kmp_free_team (kmp_runtime.cpp:5569)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64e2ca8 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 1 at 0x64EE580 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA1A8: __kmp_free_thread (kmp_runtime.cpp:5662)
==5643==    by 0x51DAB74: __kmp_free_team (kmp_runtime.cpp:5582)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee580 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64EE440 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA1AE: __kmp_free_thread (kmp_runtime.cpp:5665)
==5643==    by 0x51DAB74: __kmp_free_team (kmp_runtime.cpp:5582)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee440 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64EE458 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA1B6: __kmp_free_thread (kmp_runtime.cpp:5667)
==5643==    by 0x51DAB74: __kmp_free_team (kmp_runtime.cpp:5582)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee458 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64EE578 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA1C6: __kmp_free_thread (kmp_runtime.cpp:5675)
==5643==    by 0x51DAB74: __kmp_free_team (kmp_runtime.cpp:5582)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee578 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x64EE460 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA233: __kmp_free_thread (kmp_runtime.cpp:5708)
==5643==    by 0x51DAB74: __kmp_free_team (kmp_runtime.cpp:5582)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee460 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x54D5200 by thread #1
==5643== Locks held: none
==5643==    at 0x51DA23D: __kmp_free_thread (kmp_runtime.cpp:5711)
==5643==    by 0x51DAB74: __kmp_free_team (kmp_runtime.cpp:5582)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x54d5200 is 0 bytes inside data symbol "__kmp_nth"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 8 at 0x64DBF88 by thread #1
==5643== Locks held: none
==5643==    at 0x51DAB83: __kmp_free_team (kmp_runtime.cpp:5583)
==5643==    by 0x51DB120: __kmp_reset_root (kmp_runtime.cpp:4053)
==5643==    by 0x51DB120: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64dbf88 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64EE570 by thread #1
==5643== Locks held: none
==5643==    at 0x520374C: __kmp_wait_to_unref_task_teams (kmp_tasking.cpp:2880)
==5643==    by 0x51DB131: __kmp_reset_root (kmp_runtime.cpp:4059)
==5643==    by 0x51DB131: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee570 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x54D5200 by thread #1
==5643== Locks held: none
==5643==    at 0x51DB139: __kmp_reset_root (kmp_runtime.cpp:4079)
==5643==    by 0x51DB139: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x54d5200 is 0 bytes inside data symbol "__kmp_nth"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 1 at 0x64EF780 by thread #1
==5643== Locks held: none
==5643==    at 0x4C31740: my_memcmp (hg_intercepts.c:211)
==5643==    by 0x4C31A28: mutex_destroy_WRK (hg_intercepts.c:850)
==5643==    by 0x4C35B10: pthread_mutex_destroy (hg_intercepts.c:873)
==5643==    by 0x52168E9: __kmp_suspend_uninitialize_thread (z_Linux_util.cpp:1724)
==5643==    by 0x51DB164: __kmp_reap_thread (kmp_runtime.cpp:5999)
==5643==    by 0x51DB164: __kmp_reset_root (kmp_runtime.cpp:4083)
==5643==    by 0x51DB164: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ef780 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 1 at 0x64EF781 by thread #1
==5643== Locks held: none
==5643==    at 0x4C31753: my_memcmp (hg_intercepts.c:211)
==5643==    by 0x4C31A28: mutex_destroy_WRK (hg_intercepts.c:850)
==5643==    by 0x4C35B10: pthread_mutex_destroy (hg_intercepts.c:873)
==5643==    by 0x52168E9: __kmp_suspend_uninitialize_thread (z_Linux_util.cpp:1724)
==5643==    by 0x51DB164: __kmp_reap_thread (kmp_runtime.cpp:5999)
==5643==    by 0x51DB164: __kmp_reset_root (kmp_runtime.cpp:4083)
==5643==    by 0x51DB164: __kmp_unregister_root_current_thread(int) (kmp_runtime.cpp:4137)
==5643==    by 0x51E11BB: __kmp_internal_end_library (kmp_runtime.cpp:6240)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ef781 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x54D52C4 by thread #1
==5643== Locks held: none
==5643==    at 0x51E0E8B: __kmp_internal_end (kmp_runtime.cpp:6084)
==5643==    by 0x51E0E8B: __kmp_internal_end_library (kmp_runtime.cpp:6277)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x54d52c4 is 68 bytes inside data symbol "__kmp_global"
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during write of size 4 at 0x64EE460 by thread #1
==5643== Locks held: none
==5643==    at 0x51E0F08: __kmp_internal_end (kmp_runtime.cpp:6134)
==5643==    by 0x51E0F08: __kmp_internal_end_library (kmp_runtime.cpp:6277)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee460 is in a rw- anonymous segment
==5643== 
==5643== ----------------------------------------------------------------
==5643== 
==5643== Possible data race during read of size 8 at 0x64EE6F0 by thread #1
==5643== Locks held: none
==5643==    at 0x520A857: test_then_add4 (kmp_wait_release.h:453)
==5643==    by 0x520A857: internal_release (kmp_wait_release.h:549)
==5643==    by 0x520A857: __kmp_release_template (kmp_wait_release.h:406)
==5643==    by 0x520A857: __kmp_release_64 (kmp_wait_release.cpp:46)
==5643==    by 0x51E0F3D: __kmp_reap_thread (kmp_runtime.cpp:5965)
==5643==    by 0x51E0F3D: __kmp_internal_end (kmp_runtime.cpp:6135)
==5643==    by 0x51E0F3D: __kmp_internal_end_library (kmp_runtime.cpp:6277)
==5643==    by 0x4010E14: _dl_fini (dl-fini.c:240)
==5643==    by 0x596FFF7: __run_exit_handlers (exit.c:82)
==5643==    by 0x5970044: exit (exit.c:104)
==5643==    by 0x5956836: (below main) (libc-start.c:325)
==5643==  Address 0x64ee6f0 is in a rw- anonymous segment
==5643== 
==5643== 
==5643== For counts of detected and suppressed errors, rerun with: -v
==5643== Use --history-level=approx or =none to gain increased speed, at
==5643== the cost of reduced accuracy of conflicting-access information
==5643== ERROR SUMMARY: 522240 errors from 143 contexts (suppressed: 4840860 from 489)
